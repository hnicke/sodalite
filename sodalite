#!/bin/bash  

## set up environment
APPNAME=sodalite
LIB_DIR="${LIB_DIR:-$(dirname $(readlink -f "$0"))/src}"
CONFIG_FILE="${CONFIG_FILE:-$(dirname $(readlink -f "$0"))/docs/example.conf}"

# TODO externalize LOG_DIR
export SODALITE_LOG=/var/log/sodalite.log
touch $SODALITE_LOG || { 
    echo Missing write permissions for file \'$SODALITE_LOG\'
    exit 1
}


XDG_CONFIG=${XDG_CONFIG_HOME:-$HOME/.config}
XDG_DATA=${XDG_DATA_HOME:-$HOME/.local/share}
SODALITE_CONFIG_DIR=${XDG_CONFIG}/$APPNAME
SODALITE_DATA_DIR=${XDG_DATA}/$APPNAME
export SODALITE_BOOKMARK_DIR=${SODALITE_CONFIG_DIR}/bookmarks
( mkdir -p $SODALITE_DATA_DIR $SODALITE_BOOKMARK_DIR &2> /dev/null )

# setup database
export SODALITE_DB_PATH=${SODALITE_DATA_DIR}/db.sqlite
[ -f $SODALITE_DB_PATH ] || {
    echo "CREATE TABLE IF NOT EXISTS files (
    path text NOT NULL,
    key text NOT NULL,
    frequency INTEGER NOT NULL DEFAULT 0,
    PRIMARY KEY ( path )
    );" | sqlite3 $SODALITE_DB_PATH
    chmod 600 $SODALITE_DB_PATH
}

# $1: starting directory
export SODALITE_STARTING_DIR=${1:-$HOME}

# handle config
# fallback to user config file if exists
SODALITE_CONFIG_PATH=${SODALITE_CONFIG_DIR}/${APPNAME}.conf
[ -f $SODALITE_CONFIG_PATH ] || SODALITE_CONFIG_PATH=$CONFIG_FILE
export SODALITE_CONFIG_PATH


# adjust the delay time in ms curses waits for an escape sequence to happen after pressing ESC
export ESCDELAY=0

export SODALITE_OUTPUT_PIPE=$(mktemp -u "${TMPDIR:-/tmp/}$(basename $0).XXXXXXXX")

mkfifo $SODALITE_OUTPUT_PIPE
trap "rm -f $SODALITE_OUTPUT_PIPE" EXIT
exec 3< <(read line <$SODALITE_OUTPUT_PIPE; echo $line)
python $LIB_DIR/main.py
read <&3 line
cd "$line"
