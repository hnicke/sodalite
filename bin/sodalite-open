#!/bin/bash
# Alternative to xdg-open. I.e., opens given file with it's associated program.
# Execute app in background if the launching application is a graphical (i.e., non-terminal) app.
# In case it's a terminal app, launches app in foreground.

# If launched headless, will always fallback to a text editor

function set_fallback_editor {
    editor=${VISUAL:-$EDITOR}
    if [ ! $editor ]; then
        if type vim; then
            editor=vim
        elif type nano; then
            editor=nano
        else
            echo "Could not find a suitable editor"; exit 1
        fi
    fi
}

# $1: desktop entry name, e.g. 'vim.desktop'
function is_terminal_app {
    desktop_entry=$1
    locations='~/.local/share/applications /usr/share/applications /usr/local/share/applications'
    for location in $locations; do
        entry=$location/$desktop_entry
        [ -f $entry ] && break
    done

    [ -f "$entry" ] || { echo "Desktop entry '$entry' does not exist, aborting" >&2; exit 1; }
    is_terminal=$(cat "$entry" | grep ^Terminal= | cut -d"=" -f2)
    if [ "$is_terminal" = 'true' ]; then
        return 0
    else
        return 1
    fi
}

# $1: the exec string
function replace_exec_placeholders {
    execute=${execute/"%F"/"$target_file"}
    execute=${execute/"%f"/"$target_file"}
    execute=${execute/"%u"/"$target_file"}
    execute=${execute/"%U"/"$target_file"}
    echo $execute
}

[ "$1" ] || { echo Which file?; exit 1; }

target_file=$1

# if running headless just launch editor
if [ ! $DISPLAY ]; then
    set_fallback_editor
    $editor "$target_file"
    exit
fi

filetype=$(xdg-mime query filetype "$target_file")
desktop_entry=$(xdg-mime query default "$filetype")

[ "$desktop_entry" ] && is_terminal_app "$desktop_entry" || background="true"

execute=$(cat "$entry" | grep ^Exec= | cut -d"=" -f2)

execute=$(replace_exec_placeholders "$execute")

if [ "$background" ]; then
    nohup $execute >/dev/null 2>&1 &
else
    $execute
fi

